service: user-service
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: us-east-1
  stage: dev
  environment:
    USER_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    USER_TEST_TABLE: "user-test-${opt:stage, self:provider.stage}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "*"

resources:
  Resources:
    UsersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.USER_TABLE}


functions:
  userCreate:
    handler: api/user.create
    description: Create users
    memorySize: 128
    events:
      - http:
          path: user
          method: post
  listUsers:
    handler: api/user.list
    memorySize: 128
    description: List all candidates
    events:
      - http: 
          path: user
          method: get
  updateUser:
    handler: api/user.update
    description: Update user data
    memorySize: 128
    events:
      - http:
          path: user/{id}
          method: put
  deleteUser:
    handler: api/user.deleteUser
    description: Delete user
    memorySize: 128
    events:
      - http:
          path: user/{id}
          method: delete
  
plugins:
  - serverless-offline